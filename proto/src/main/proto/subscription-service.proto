syntax = "proto3";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
package com.lintang.netflik.models;




option java_multiple_files = true;

option go_package =  "tenflix/lintang/order-aggregator-service/pb";


message PlanDto{
  uint64 plan_id = 1;
  string name = 2;
  uint64 price = 3;
  string description = 4;
  uint32 active_period = 5;
  uint32 discount_price = 6;
}

message CreatePlanDto{
  string name = 2;
  uint64 price = 3;
  string description = 4;
  uint32 active_period = 5;
  uint32 discount_price = 6;
}

message  CreateOrder {
  string userId = 1;
  uint64 planId = 2;
}


message GetPlanGrpcRequest{
  CreateOrder createOrder= 1;
}
message CreatePlanGrpcRequest{
  CreatePlanDto createPlanDto =1;
}

message CreatePlanGrpcResponse{
  PlanDto planDto =1;
}


message GetPlanGrpcResponse{
  PlanDto plan = 1;
}

// check active subscription
message GetActiveSubscriptionDto{
  string userId =1;
}

message  SubscriptionDto{
  int32 id =1;
  string userId = 2;
  string status = 3;
  google.protobuf.Timestamp endSubscriptionDate = 4;
  PlanDto plan = 5;
}



message GetActiveSubscriptionRequest{
    GetActiveSubscriptionDto  getActiveSubscriptionDto = 1;
}

message GetUserCurrentSubscriptionRequest{
  GetActiveSubscriptionDto getSubscriptionRequestDto = 1;
}

message GetUserCurrentSubscriptionResponse{
  SubscriptionDto subscriptionDto = 1;
}

message  GetUserSubscriptionByOrderIdRequest{
  string orderId =1;
  string userId =2;
}

message GetUserSubscriptionByOrderIdResponse {
  SubscriptionDto subscriptionDto = 1;
}


service SubscriptionService{
  rpc getPlan(GetPlanGrpcRequest) returns (GetPlanGrpcResponse);
  rpc createPlan(CreatePlanGrpcRequest) returns (CreatePlanGrpcResponse);
  rpc getActiveSubscription(GetActiveSubscriptionRequest) returns (google.protobuf.Empty);
  rpc getUserCurrentSubscription(GetUserCurrentSubscriptionRequest) returns (GetUserCurrentSubscriptionResponse);
  rpc getUserSubscriptionByOrderId(GetUserSubscriptionByOrderIdRequest) returns (GetUserSubscriptionByOrderIdResponse);
}
