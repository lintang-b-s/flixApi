syntax = "proto3";

package com.lintang.netflik.models;
import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";


option java_multiple_files = true;

option go_package =  "tenflix/lintang/order-aggregator-service/pb";


enum OrderStatus{
  PENDING = 0;
  PAID = 1;
  CANCELLED = 2;
  COMPLETED =3;
}

message  OrderPlanDto {
  string id = 1;

  uint64 plan_id=4;
  uint64 price = 5;
  uint64 sub_total=6;
}

message OrderDto{
  string id = 1;
  string user_id = 2;
  uint64 price = 3;
  OrderStatus order_status = 4;
  string payment_id = 5;
  string failure_messages = 6;
  OrderPlanDto plan = 7;
}

message PaymentNotification{
  map<string, string> notification_res=1;
  string bank =2;
  string vaNum = 3;

}

message ProcessResponse{
  string response = 1;
}



message CreateOrderGrpcRequest {
  OrderDto order = 2;
}


message  CreateOrderGrpcResponse{
  OrderDto createdOrder = 1;
}

message ProcessOrderRequest {
  PaymentNotification payment_notification =1;
}

message ProcessOrderResponse {
  ProcessResponse process_response =1;
}

message GetUserOrderDetailRequest {
  string orderId = 1;
  string userId = 2;
}

message GetUserOrderDetailResponse {
  OrderDto orderDto = 1;
}

message GetUserOrderHistoryRequest {
  string userId =1;
}

message GetUserOrderHistoryResponse {
  OrderDto orderDto = 1;
}

service OrderService {
  rpc createOrder(CreateOrderGrpcRequest) returns (CreateOrderGrpcResponse);
  rpc processOrderSaga(ProcessOrderRequest) returns(google.protobuf.Empty);
  rpc getUserOrderDetail(GetUserOrderDetailRequest) returns (GetUserOrderDetailResponse);
  rpc getUserOrderHistory(GetUserOrderHistoryRequest) returns (stream GetUserOrderHistoryResponse);

}

